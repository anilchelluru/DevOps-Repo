git config --list (to see the configurations)
git init (to initialize the working directory to use git commands)
git status (to check the file is track or untrack)
git add (to add the files)
git rm <filename> (to remove the files)
git --restore staged <filename> (to restore the files back to the original state)
git commit -m "any message" (to commit the changes made by you)
git tag --a v1.3 <commit id> -m "any message" (Tagging is used to capture a point in history that is used for a marked version release)
git show (to see the commit changes made by you by commit ID)
git log (to see the logs)
git diff (to see the modifications (+add) (-delete))
git log --oneline (to see the logs in one line)
git remote -v (see the remote's URLs in listings)
git remote add origin https://github.com/educomp24/DevOps-Repo/new/master/Git (to connect to your repo url)
git push -u origin master <source or feature branch name> (to push the code to remote or cloud repo)
git clone (to clone the repo from cloud to local on yuor computer)
git stash (temporarily shelve changes made in the working directory)
git pull (to pull the repo changes from cloud to local computer)
git fetch (It fetches branches and tags from one or more repositories)
git --version (to check the version of git)
git reset --soft (The easiest way to undo the last Git commit is to execute the “git reset” command with the “–soft” option that will preserve changes done to your files)
git reset --hard (don't change the branch but get rid of all local changes)
git branch <new branch name> (to create the new branch)
git checkout -b <<new branch name> (to create the new branch)
git branch -d <branch name> (to delete the branch)
git merge (to merge the branch into other branch
